"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _WebGLRenderingContext = _interopRequireDefault(require("./WebGLRenderingContext"));

var _CanvasRenderingContext2D = _interopRequireDefault(require("./CanvasRenderingContext2D"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var HTMLCanvasElement =
/*#__PURE__*/
function () {
  function HTMLCanvasElement(width, height) {
    _classCallCheck(this, HTMLCanvasElement);

    this.width = width || 100;
    this.height = height || 100;
  }

  _createClass(HTMLCanvasElement, [{
    key: "getContext",
    value: function getContext(arg) {
      switch (arg) {
        case "2d":
          return new _CanvasRenderingContext2D["default"](this);

        case "webgl":
        case "experimental-webgl":
          return new _WebGLRenderingContext["default"](this);
      }
    }
  }]);

  return HTMLCanvasElement;
}();

exports["default"] = HTMLCanvasElement;